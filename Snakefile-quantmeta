# Analysis of standard mapping (downstream use for LOD analysis and developing the linear regression to quantify unknown targets)

#to run snakemake: conda activate snakemake

#set a workflow config file
configfile: "Config/config_example_samples.yaml" #Create Config/config_{sample descript}_downsample.yaml file that includes a list of all standards mapping results-- no downsampling and downsampling
SAMPLE = config["sample"]

#if want to run on just some files
#SAMPLE = ["SPECIFIC_SAMPLE"] #Update and remove "#" and add a # to the SAMPLE = config["sample"] line above

rule all_quantmeta:
    input:
        expand("Results/{samp}/standards_results.txt", samp=SAMPLE),
        "Regressions/quantification/rel_to_abs" 

# Run quantmeta.R script

rule quant_meta:
    input:
        mapping="Mapping/{sample}/standards_mapping.txt",
        spikes="Spike-ins/example_sample_info.txt", #Update with experiment specific sample_info.txt file
        STD_MIXES="Spike-ins/STD_MIXES.txt", #Check that provided file agrees with your version of spike-in standards
        ddPCR="Spike-ins/example_stds_ddPCR_conc.txt", #Update to your specific ddPCR/qPCR measurements or a blank file if ddPCR or qPCR measurements were not made of spike-in standards
        detect_reg="Regressions/detection/Langenfeld_2022_E_detect" #Update with different E_detect if applicable
    params:
        "{sample}"
    conda:
        "Envs/R.yaml"
    output:
        "Results/{sample}/standards_results.txt"
    script:
        "Scripts/quantmeta.R"

rule all_regression:
    input:
        expand("Results/{samp}/standards_results.txt", samp=SAMPLE)
    params:
        "Spike-ins/example_sample_info.txt" #Update with experiment specific sample_info.txt file
    conda:
        "Envs/R.yaml"
    output:
        "Regressions/quantification/rel_to_abs"
    script:
        "Scripts/quantmeta_summary_regression.R"


